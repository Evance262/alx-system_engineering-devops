What happens when you type "google.com" in your browser and press enter

A web browser communicates with a web server using what's called the Hyper Text Transfer Protocol (HTTP). When you search for some page on the web browser, the browser sends an HTTP Request from your computer to the server and give you the results either the exact same page you are looking for or some other related web pages. This article explains what happens when you type "google.com" in your browser and press enter.

HTTPS/SSL
First off, let's talk about HTTP requests. An HTTP request is the way internet communications platforms like browsers ask for the information they need to load a website. SSL stands for Secure Sockets Layer and, in short, it's the standard technology for keeping an internet connection secure and safeguarding any sensitive data that is being sent between two systems, preventing criminals from reading and modifying any information transferred, including potential personal details. The requests made over the internet carries with series of encoded data that carries different types of information.

These requests include:

A URL to identify the targeted server (in this case google's server) and resource which contains and HTML file, a data point on the server or any other tool to run (i.e static files).
A method that defines the required actions, for instance getting the google page index.html file. The methods/verbs may include:
GET: Gets the specified resource, for instance, the HTML file containing the information on google's landing page (Which is usually the Search button, and some news feed).
POST: Used to create a new resource (e.g. add a new article to google, add a new contact to a database).
HEAD: Get the metadata information about a specific resource without getting the body like GET would. 
PUT: Update an existing resource (or create a new one if it doesn't exist).
DELETE: Delete the specified resource.
For HTTP requests to be successful, there is a need of the Domain Name System(DNS) query which demands for the information sent from a user to a server. In our case, entering google.com to a web browser to locate google's web page. Unlike humans, computers recognize the location of the required web page by an IP Address. 

Internet Protocol (IP) address
An IP address is a string of numbers separated by periods. IP addresses are expressed as a set of four numbers — an example address might be 192.158.1.38. Each number in the set can range from 0 to 255. So, the full IP addressing range goes from 0.0.0.0 to 255.255.255.255. IP addresses are not random. They are mathematically produced and allocated by the Internet Assigned Numbers Authority (IANA), a division of the Internet Corporation for Assigned Names and Numbers (ICANN). ICANN is a non-profit organization that was established in the United States in 1998 to help maintain the security of the internet and allow it to be usable by all. Each time anyone registers a domain on the internet, they go through a domain name registrar, who pays a small fee to ICANN to register the domain.

Domain Name System
The DNS allows us to call a web page by typing a simple domain name, such as www.google.com instead of something like "107.26.523.274" once the user wants to access google site. Therefore, after hitting the "Enter button", the browser sends a request to the user's DNS resolver. The resolver does not know the IP address for www.google.com, so it will query one of the root DNS servers.The root servers knows the locations of all the Top Level Domain (TLD), such as .com, so they return the location of the DNS servers.

Web and Application Server
A web server accepts and fulfills requests from clients for static content (i.e., HTML pages, files, images, and videos) from a website. Web servers handle HTTP requests and responses only. On the other hand application server exposes business logic to the clients, which generates dynamic content. It is a software framework that transforms data to provide the specialized functionality offered by a business, service, or application. Application servers enhance the interactive parts of a website that can appear differently depending on the context of the request.

But at the time our user here is sending a request at the google server, other users world wide are also sending different types of requests from their PCs or smartphone browsers. Which increases the traffic in relieving the requested results. This is when now a load balancer comes in handy. 

Load Balancing
Load balancing is the core networking solution to distribute traffic across multiple server in a server farm. Load balancers improve application availability and responsiveness and also prevent server overload. It detect the health of backend resources and do not send traffic to servers that are not able to fulfill requests. Regardless of whether it’s hardware or software, or what algorithm(s) it uses, a load balancer disburses traffic to different web servers in the resource pool to ensure that no single server becomes overworked and subsequently unreliable. It effectively minimizes server response time and maximizes throughput.

Web Application Firewall
After passing through the load balancer, the request now goes through the Web Application Firewall (WAF). A WAF or web application firewall helps protect web applications by filtering and monitoring HTTP traffic between the web application and the Internet. It typically protects web applications from attacks such as cross-site forgery, cross-site-scripting (XSS), file inclusion, and SQL injection, among others. A WAF is a protocol layer 7 defense (in the OSI model), and is not designed to defend against all types of attacks. This method of attack mitigation is usually part of a suite of tools which together create a holistic defense against a range of attack vectors.

Once the query (or request) reaches the .com TLD servers, it will find the Authoritative DNS server of www.google.com and will reply to the resolver with that server. The resolver will send a query to the Authoritative DNS server of the domain and will resolve it. The Authoritative DNS server of the domain will check within its database and will find an entry for www.google.com, which has an IP address.

Databases
Database servers work by containing the database storage and memory space along with a Database Management System (DBMS). The DBMS is the application clients use to access their digital information through the database server. When a database server client sends a specific command to the DBMS, the DBMS then executes the client's requested task.

Finally the resolver will know the IP address for www.google.com and will send the result to the user's computer. Then the web server answers the request by serving a web page
